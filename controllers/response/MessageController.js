const { extractCharactersAndNumbers } = require("../../utils/helpers");

const RequestController = require("../RequestController");

exports.getResponse = async (request, requesterCode) => {
  try {
    if (request === "‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏õ‡∏±‡∏ç‡∏´‡∏≤") {
      return { type: "text", text: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì" };
    } else if (request === "‡∏ß‡∏¥‡∏ò‡∏µ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤") {
      return {
        type: "text",
        text: "‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô " + request + " ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£",
      };
    } else if (request.includes("‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å")) {
      const reqId = extractCharactersAndNumbers(request);

      if (request.includes(reqId)) {
        const cancelRequest = await RequestController.cancelRequest(
          requesterCode,
          reqId
        );

        if (cancelRequest) {
          return {
            type: "text",
            text: `‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å ${reqId} ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡∏£‡∏±‡∏öüòÜ`,
          };
        } else {
          return {
            type: "text",
            text: `‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏£‡∏±‡∏öü•≤ ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å ${reqId} ‡πÑ‡∏î‡πâüòû`,
          };
        }
      }
      return { type: "text", text: "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡∏£‡∏±‡∏ö " };
    }
  } catch (error) {
    console.error("Error in Message getResponse:", error);
  }
};
